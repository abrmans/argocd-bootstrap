paperless:

  image:
    # -- image repository
    repository: jonaswinkler/paperless-ng
    # -- image tag
    tag: 1.4.5
    # -- image pull policy
    pullPolicy: IfNotPresent

  env:
    - name: COMPOSE_PROJECT_NAME
      value: "paperless"
    - name: PAPERLESS_OCR_LANGUAGE
      value: "eng"
    - name: PAPERLESS_REDIS
      value: "redis://localhost:6379"
    - name: PAPERLESS_ALLOWED_HOSTS
      value: "paperless.abrmanlabs.com"      
    - name: PAPERLESS_ADMIN_USER
      value: "miles"    
    - name: PAPERLESS_ADMIN_PASSWORD
      value: "2406ESpa!"
    - name: PAPERLESS_SECRET_KEY
      value: "CT:1VXL9k{?LV=U"
      
  additionalContainers:
    broker:
      imagePullPolicy: IfNotPresent
      name: broker
      image: redis:6.0
  
  ingress:
    main:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
      labels: {}
      hosts:
        - host: paperless.abrmanlabs.com
          paths:
            - path: /
              # Ignored if not kubeVersion >= 1.14-0
              pathType: Prefix
      tls:
         - secretName: paperless-tls-prod
           hosts:
           - paperless.abrmanlabs.com
      
  persistence:
    consume:
      accessMode: ReadWriteOnce
      emptyDir:
        enabled: false
      mountPath: /usr/src/paperless/consume
      storageClass: "longhorn"
      size: 8Gi
    data:
      accessMode: ReadWriteOnce
      emptyDir:
        enabled: false
      enabled: true
      mountPath: /usr/src/paperless/data
      storageClass: "longhorn"
      size: 8Gi
    export:
      accessMode: ReadWriteOnce
      emptyDir:
        enabled: false
      enabled: true
      mountpath: /usr/src/paperless/export
      storageClass: "longhorn"
      size: 8Gi      
    media:
      accessMode: ReadWriteOnce
      emptyDir:
        enabled: false
      enabled: true
      mountpath: /usr/src/paperless/media
      storageClass: "longhorn"
      size: 8Gi

  service:
    main:
      ports:
        http:
          port: 8000
